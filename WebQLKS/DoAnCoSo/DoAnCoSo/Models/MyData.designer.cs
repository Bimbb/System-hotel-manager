#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAnCoSo.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebKhachSan")]
	public partial class MyDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnhPhong(AnhPhong instance);
    partial void UpdateAnhPhong(AnhPhong instance);
    partial void DeleteAnhPhong(AnhPhong instance);
    partial void InsertChiTietTienNghi(ChiTietTienNghi instance);
    partial void UpdateChiTietTienNghi(ChiTietTienNghi instance);
    partial void DeleteChiTietTienNghi(ChiTietTienNghi instance);
    partial void InsertTinhTrang(TinhTrang instance);
    partial void UpdateTinhTrang(TinhTrang instance);
    partial void DeleteTinhTrang(TinhTrang instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhuVuc(KhuVuc instance);
    partial void UpdateKhuVuc(KhuVuc instance);
    partial void DeleteKhuVuc(KhuVuc instance);
    partial void InsertKieuPhong(KieuPhong instance);
    partial void UpdateKieuPhong(KieuPhong instance);
    partial void DeleteKieuPhong(KieuPhong instance);
    partial void InsertLoaiPhong(LoaiPhong instance);
    partial void UpdateLoaiPhong(LoaiPhong instance);
    partial void DeleteLoaiPhong(LoaiPhong instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertResetPass(ResetPass instance);
    partial void UpdateResetPass(ResetPass instance);
    partial void DeleteResetPass(ResetPass instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTienNghi(TienNghi instance);
    partial void UpdateTienNghi(TienNghi instance);
    partial void DeleteTienNghi(TienNghi instance);
    #endregion
		
		public MyDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebKhachSanConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AnhPhong> AnhPhongs
		{
			get
			{
				return this.GetTable<AnhPhong>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietTienNghi> ChiTietTienNghis
		{
			get
			{
				return this.GetTable<ChiTietTienNghi>();
			}
		}
		
		public System.Data.Linq.Table<TinhTrang> TinhTrangs
		{
			get
			{
				return this.GetTable<TinhTrang>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhuVuc> KhuVucs
		{
			get
			{
				return this.GetTable<KhuVuc>();
			}
		}
		
		public System.Data.Linq.Table<KieuPhong> KieuPhongs
		{
			get
			{
				return this.GetTable<KieuPhong>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhong> LoaiPhongs
		{
			get
			{
				return this.GetTable<LoaiPhong>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<ResetPass> ResetPasses
		{
			get
			{
				return this.GetTable<ResetPass>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<TienNghi> TienNghis
		{
			get
			{
				return this.GetTable<TienNghi>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnhPhong")]
	public partial class AnhPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAnhPhong;
		
		private string _Url;
		
		private string _TinhTrang;
		
		private System.Nullable<int> _MaPhong;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAnhPhongChanging(int value);
    partial void OnIDAnhPhongChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMaPhongChanging(System.Nullable<int> value);
    partial void OnMaPhongChanged();
    #endregion
		
		public AnhPhong()
		{
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAnhPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAnhPhong
		{
			get
			{
				return this._IDAnhPhong;
			}
			set
			{
				if ((this._IDAnhPhong != value))
				{
					this.OnIDAnhPhongChanging(value);
					this.SendPropertyChanging();
					this._IDAnhPhong = value;
					this.SendPropertyChanged("IDAnhPhong");
					this.OnIDAnhPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(100)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(50)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="Int")]
		public System.Nullable<int> MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_AnhPhong", Storage="_Phong", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.AnhPhongs.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.AnhPhongs.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietTienNghi")]
	public partial class ChiTietTienNghi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhong;
		
		private int _IDTN;
		
		private System.Nullable<int> _Soluong;
		
		private System.Nullable<bool> _TinhTrang;
		
		private EntityRef<Phong> _Phong;
		
		private EntityRef<TienNghi> _TienNghi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(int value);
    partial void OnMaPhongChanged();
    partial void OnIDTNChanging(int value);
    partial void OnIDTNChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public ChiTietTienNghi()
		{
			this._Phong = default(EntityRef<Phong>);
			this._TienNghi = default(EntityRef<TienNghi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTN
		{
			get
			{
				return this._IDTN;
			}
			set
			{
				if ((this._IDTN != value))
				{
					if (this._TienNghi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTNChanging(value);
					this.SendPropertyChanging();
					this._IDTN = value;
					this.SendPropertyChanged("IDTN");
					this.OnIDTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_ChiTietTienNghi", Storage="_Phong", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.ChiTietTienNghis.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.ChiTietTienNghis.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(int);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TienNghi_ChiTietTienNghi", Storage="_TienNghi", ThisKey="IDTN", OtherKey="IDTN", IsForeignKey=true)]
		public TienNghi TienNghi
		{
			get
			{
				return this._TienNghi.Entity;
			}
			set
			{
				TienNghi previousValue = this._TienNghi.Entity;
				if (((previousValue != value) 
							|| (this._TienNghi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TienNghi.Entity = null;
						previousValue.ChiTietTienNghis.Remove(this);
					}
					this._TienNghi.Entity = value;
					if ((value != null))
					{
						value.ChiTietTienNghis.Add(this);
						this._IDTN = value.IDTN;
					}
					else
					{
						this._IDTN = default(int);
					}
					this.SendPropertyChanged("TienNghi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinhTrang")]
	public partial class TinhTrang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTinhTrang;
		
		private string _maTinhTrang;
		
		private string _tenTinhTrang;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTinhTrangChanging(int value);
    partial void OnIDTinhTrangChanged();
    partial void OnmaTinhTrangChanging(string value);
    partial void OnmaTinhTrangChanged();
    partial void OntenTinhTrangChanging(string value);
    partial void OntenTinhTrangChanged();
    #endregion
		
		public TinhTrang()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTinhTrang", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDTinhTrang
		{
			get
			{
				return this._IDTinhTrang;
			}
			set
			{
				if ((this._IDTinhTrang != value))
				{
					this.OnIDTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._IDTinhTrang = value;
					this.SendPropertyChanged("IDTinhTrang");
					this.OnIDTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTinhTrang", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maTinhTrang
		{
			get
			{
				return this._maTinhTrang;
			}
			set
			{
				if ((this._maTinhTrang != value))
				{
					this.OnmaTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._maTinhTrang = value;
					this.SendPropertyChanged("maTinhTrang");
					this.OnmaTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenTinhTrang", DbType="NVarChar(50)")]
		public string tenTinhTrang
		{
			get
			{
				return this._tenTinhTrang;
			}
			set
			{
				if ((this._tenTinhTrang != value))
				{
					this.OntenTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._tenTinhTrang = value;
					this.SendPropertyChanged("tenTinhTrang");
					this.OntenTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhTrang_TaiKhoan", Storage="_TaiKhoans", ThisKey="maTinhTrang", OtherKey="maTinhTrang")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrang = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHoaDon;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _IDTaiKhoan;
		
		private System.Nullable<int> _MaPhong;
		
		private System.Nullable<double> _TongTien;
		
		private System.Nullable<int> _TinhTrang;
		
		private System.Nullable<System.DateTime> _NgayThue;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private EntityRef<Phong> _Phong;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHoaDonChanging(int value);
    partial void OnIDHoaDonChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnIDTaiKhoanChanging(System.Nullable<int> value);
    partial void OnIDTaiKhoanChanged();
    partial void OnMaPhongChanging(System.Nullable<int> value);
    partial void OnMaPhongChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnTinhTrangChanging(System.Nullable<int> value);
    partial void OnTinhTrangChanged();
    partial void OnNgayThueChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThueChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    #endregion
		
		public HoaDon()
		{
			this._Phong = default(EntityRef<Phong>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoaDon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDHoaDon
		{
			get
			{
				return this._IDHoaDon;
			}
			set
			{
				if ((this._IDHoaDon != value))
				{
					this.OnIDHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IDHoaDon = value;
					this.SendPropertyChanged("IDHoaDon");
					this.OnIDHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTaiKhoan", DbType="Int")]
		public System.Nullable<int> IDTaiKhoan
		{
			get
			{
				return this._IDTaiKhoan;
			}
			set
			{
				if ((this._IDTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._IDTaiKhoan = value;
					this.SendPropertyChanged("IDTaiKhoan");
					this.OnIDTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="Int")]
		public System.Nullable<int> MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Int")]
		public System.Nullable<int> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThue", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThue
		{
			get
			{
				return this._NgayThue;
			}
			set
			{
				if ((this._NgayThue != value))
				{
					this.OnNgayThueChanging(value);
					this.SendPropertyChanging();
					this._NgayThue = value;
					this.SendPropertyChanged("NgayThue");
					this.OnNgayThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_HoaDon", Storage="_Phong", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HoaDon", Storage="_TaiKhoan", ThisKey="IDTaiKhoan", OtherKey="IDTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._IDTaiKhoan = value.IDTaiKhoan;
					}
					else
					{
						this._IDTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuVuc")]
	public partial class KhuVuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKhuVuc;
		
		private string _TenKV;
		
		private System.Nullable<int> _SoLuongPhong;
		
		private string _TieuDe;
		
		private string _AnhDaiDien;
		
		private string _anhduphong;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKhuVucChanging(int value);
    partial void OnIDKhuVucChanged();
    partial void OnTenKVChanging(string value);
    partial void OnTenKVChanged();
    partial void OnSoLuongPhongChanging(System.Nullable<int> value);
    partial void OnSoLuongPhongChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnAnhDaiDienChanging(string value);
    partial void OnAnhDaiDienChanged();
    partial void OnanhduphongChanging(string value);
    partial void OnanhduphongChanged();
    #endregion
		
		public KhuVuc()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhuVuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKhuVuc
		{
			get
			{
				return this._IDKhuVuc;
			}
			set
			{
				if ((this._IDKhuVuc != value))
				{
					this.OnIDKhuVucChanging(value);
					this.SendPropertyChanging();
					this._IDKhuVuc = value;
					this.SendPropertyChanged("IDKhuVuc");
					this.OnIDKhuVucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKV", DbType="NVarChar(50)")]
		public string TenKV
		{
			get
			{
				return this._TenKV;
			}
			set
			{
				if ((this._TenKV != value))
				{
					this.OnTenKVChanging(value);
					this.SendPropertyChanging();
					this._TenKV = value;
					this.SendPropertyChanged("TenKV");
					this.OnTenKVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongPhong", DbType="Int")]
		public System.Nullable<int> SoLuongPhong
		{
			get
			{
				return this._SoLuongPhong;
			}
			set
			{
				if ((this._SoLuongPhong != value))
				{
					this.OnSoLuongPhongChanging(value);
					this.SendPropertyChanging();
					this._SoLuongPhong = value;
					this.SendPropertyChanged("SoLuongPhong");
					this.OnSoLuongPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(100)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhDaiDien", DbType="NVarChar(100)")]
		public string AnhDaiDien
		{
			get
			{
				return this._AnhDaiDien;
			}
			set
			{
				if ((this._AnhDaiDien != value))
				{
					this.OnAnhDaiDienChanging(value);
					this.SendPropertyChanging();
					this._AnhDaiDien = value;
					this.SendPropertyChanged("AnhDaiDien");
					this.OnAnhDaiDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anhduphong", DbType="NVarChar(100)")]
		public string anhduphong
		{
			get
			{
				return this._anhduphong;
			}
			set
			{
				if ((this._anhduphong != value))
				{
					this.OnanhduphongChanging(value);
					this.SendPropertyChanging();
					this._anhduphong = value;
					this.SendPropertyChanged("anhduphong");
					this.OnanhduphongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuVuc_Phong", Storage="_Phongs", ThisKey="IDKhuVuc", OtherKey="IDKhuVuc")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.KhuVuc = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.KhuVuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KieuPhong")]
	public partial class KieuPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKieuPhong;
		
		private string _TenKieuPhong;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKieuPhongChanging(int value);
    partial void OnIDKieuPhongChanged();
    partial void OnTenKieuPhongChanging(string value);
    partial void OnTenKieuPhongChanged();
    #endregion
		
		public KieuPhong()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKieuPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKieuPhong
		{
			get
			{
				return this._IDKieuPhong;
			}
			set
			{
				if ((this._IDKieuPhong != value))
				{
					this.OnIDKieuPhongChanging(value);
					this.SendPropertyChanging();
					this._IDKieuPhong = value;
					this.SendPropertyChanged("IDKieuPhong");
					this.OnIDKieuPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKieuPhong", DbType="NVarChar(50)")]
		public string TenKieuPhong
		{
			get
			{
				return this._TenKieuPhong;
			}
			set
			{
				if ((this._TenKieuPhong != value))
				{
					this.OnTenKieuPhongChanging(value);
					this.SendPropertyChanging();
					this._TenKieuPhong = value;
					this.SendPropertyChanged("TenKieuPhong");
					this.OnTenKieuPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KieuPhong_Phong", Storage="_Phongs", ThisKey="IDKieuPhong", OtherKey="IDKieuPhong")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.KieuPhong = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.KieuPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiPhong")]
	public partial class LoaiPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLoaiPhong;
		
		private string _TenLoaiPhong;
		
		private System.Nullable<int> _SoLuongPhong;
		
		private string _AnhDaiDien;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLoaiPhongChanging(int value);
    partial void OnIDLoaiPhongChanged();
    partial void OnTenLoaiPhongChanging(string value);
    partial void OnTenLoaiPhongChanged();
    partial void OnSoLuongPhongChanging(System.Nullable<int> value);
    partial void OnSoLuongPhongChanged();
    partial void OnAnhDaiDienChanging(string value);
    partial void OnAnhDaiDienChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public LoaiPhong()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDLoaiPhong
		{
			get
			{
				return this._IDLoaiPhong;
			}
			set
			{
				if ((this._IDLoaiPhong != value))
				{
					this.OnIDLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiPhong = value;
					this.SendPropertyChanged("IDLoaiPhong");
					this.OnIDLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiPhong", DbType="NVarChar(100)")]
		public string TenLoaiPhong
		{
			get
			{
				return this._TenLoaiPhong;
			}
			set
			{
				if ((this._TenLoaiPhong != value))
				{
					this.OnTenLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiPhong = value;
					this.SendPropertyChanged("TenLoaiPhong");
					this.OnTenLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongPhong", DbType="Int")]
		public System.Nullable<int> SoLuongPhong
		{
			get
			{
				return this._SoLuongPhong;
			}
			set
			{
				if ((this._SoLuongPhong != value))
				{
					this.OnSoLuongPhongChanging(value);
					this.SendPropertyChanging();
					this._SoLuongPhong = value;
					this.SendPropertyChanged("SoLuongPhong");
					this.OnSoLuongPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhDaiDien", DbType="NVarChar(50)")]
		public string AnhDaiDien
		{
			get
			{
				return this._AnhDaiDien;
			}
			set
			{
				if ((this._AnhDaiDien != value))
				{
					this.OnAnhDaiDienChanging(value);
					this.SendPropertyChanging();
					this._AnhDaiDien = value;
					this.SendPropertyChanged("AnhDaiDien");
					this.OnAnhDaiDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_Phongs", ThisKey="IDLoaiPhong", OtherKey="IDLoaiPhong")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhong;
		
		private string _TenPhong;
		
		private System.Nullable<double> _GiaPhong;
		
		private System.Nullable<int> _IDKhuVuc;
		
		private System.Nullable<int> _IDLoaiPhong;
		
		private string _AnhDaiDien;
		
		private string _MoTa;
		
		private System.Nullable<bool> _TrangThai;
		
		private string _Vitri;
		
		private System.Nullable<int> _IDKieuPhong;
		
		private string _Location;
		
		private EntitySet<AnhPhong> _AnhPhongs;
		
		private EntitySet<ChiTietTienNghi> _ChiTietTienNghis;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntityRef<KhuVuc> _KhuVuc;
		
		private EntityRef<KieuPhong> _KieuPhong;
		
		private EntityRef<LoaiPhong> _LoaiPhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(int value);
    partial void OnMaPhongChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnGiaPhongChanging(System.Nullable<double> value);
    partial void OnGiaPhongChanged();
    partial void OnIDKhuVucChanging(System.Nullable<int> value);
    partial void OnIDKhuVucChanged();
    partial void OnIDLoaiPhongChanging(System.Nullable<int> value);
    partial void OnIDLoaiPhongChanged();
    partial void OnAnhDaiDienChanging(string value);
    partial void OnAnhDaiDienChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnVitriChanging(string value);
    partial void OnVitriChanged();
    partial void OnIDKieuPhongChanging(System.Nullable<int> value);
    partial void OnIDKieuPhongChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    #endregion
		
		public Phong()
		{
			this._AnhPhongs = new EntitySet<AnhPhong>(new Action<AnhPhong>(this.attach_AnhPhongs), new Action<AnhPhong>(this.detach_AnhPhongs));
			this._ChiTietTienNghis = new EntitySet<ChiTietTienNghi>(new Action<ChiTietTienNghi>(this.attach_ChiTietTienNghis), new Action<ChiTietTienNghi>(this.detach_ChiTietTienNghis));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._KhuVuc = default(EntityRef<KhuVuc>);
			this._KieuPhong = default(EntityRef<KieuPhong>);
			this._LoaiPhong = default(EntityRef<LoaiPhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(200)")]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaPhong", DbType="Float")]
		public System.Nullable<double> GiaPhong
		{
			get
			{
				return this._GiaPhong;
			}
			set
			{
				if ((this._GiaPhong != value))
				{
					this.OnGiaPhongChanging(value);
					this.SendPropertyChanging();
					this._GiaPhong = value;
					this.SendPropertyChanged("GiaPhong");
					this.OnGiaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhuVuc", DbType="Int")]
		public System.Nullable<int> IDKhuVuc
		{
			get
			{
				return this._IDKhuVuc;
			}
			set
			{
				if ((this._IDKhuVuc != value))
				{
					if (this._KhuVuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhuVucChanging(value);
					this.SendPropertyChanging();
					this._IDKhuVuc = value;
					this.SendPropertyChanged("IDKhuVuc");
					this.OnIDKhuVucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiPhong", DbType="Int")]
		public System.Nullable<int> IDLoaiPhong
		{
			get
			{
				return this._IDLoaiPhong;
			}
			set
			{
				if ((this._IDLoaiPhong != value))
				{
					if (this._LoaiPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiPhong = value;
					this.SendPropertyChanged("IDLoaiPhong");
					this.OnIDLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhDaiDien", DbType="NVarChar(50)")]
		public string AnhDaiDien
		{
			get
			{
				return this._AnhDaiDien;
			}
			set
			{
				if ((this._AnhDaiDien != value))
				{
					this.OnAnhDaiDienChanging(value);
					this.SendPropertyChanging();
					this._AnhDaiDien = value;
					this.SendPropertyChanged("AnhDaiDien");
					this.OnAnhDaiDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(1000)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vitri", DbType="NVarChar(500)")]
		public string Vitri
		{
			get
			{
				return this._Vitri;
			}
			set
			{
				if ((this._Vitri != value))
				{
					this.OnVitriChanging(value);
					this.SendPropertyChanging();
					this._Vitri = value;
					this.SendPropertyChanged("Vitri");
					this.OnVitriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKieuPhong", DbType="Int")]
		public System.Nullable<int> IDKieuPhong
		{
			get
			{
				return this._IDKieuPhong;
			}
			set
			{
				if ((this._IDKieuPhong != value))
				{
					if (this._KieuPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKieuPhongChanging(value);
					this.SendPropertyChanging();
					this._IDKieuPhong = value;
					this.SendPropertyChanged("IDKieuPhong");
					this.OnIDKieuPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(1000)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_AnhPhong", Storage="_AnhPhongs", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<AnhPhong> AnhPhongs
		{
			get
			{
				return this._AnhPhongs;
			}
			set
			{
				this._AnhPhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_ChiTietTienNghi", Storage="_ChiTietTienNghis", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<ChiTietTienNghi> ChiTietTienNghis
		{
			get
			{
				return this._ChiTietTienNghis;
			}
			set
			{
				this._ChiTietTienNghis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_HoaDon", Storage="_HoaDons", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuVuc_Phong", Storage="_KhuVuc", ThisKey="IDKhuVuc", OtherKey="IDKhuVuc", IsForeignKey=true)]
		public KhuVuc KhuVuc
		{
			get
			{
				return this._KhuVuc.Entity;
			}
			set
			{
				KhuVuc previousValue = this._KhuVuc.Entity;
				if (((previousValue != value) 
							|| (this._KhuVuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuVuc.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._KhuVuc.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._IDKhuVuc = value.IDKhuVuc;
					}
					else
					{
						this._IDKhuVuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhuVuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KieuPhong_Phong", Storage="_KieuPhong", ThisKey="IDKieuPhong", OtherKey="IDKieuPhong", IsForeignKey=true)]
		public KieuPhong KieuPhong
		{
			get
			{
				return this._KieuPhong.Entity;
			}
			set
			{
				KieuPhong previousValue = this._KieuPhong.Entity;
				if (((previousValue != value) 
							|| (this._KieuPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KieuPhong.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._KieuPhong.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._IDKieuPhong = value.IDKieuPhong;
					}
					else
					{
						this._IDKieuPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("KieuPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_LoaiPhong", ThisKey="IDLoaiPhong", OtherKey="IDLoaiPhong", IsForeignKey=true)]
		public LoaiPhong LoaiPhong
		{
			get
			{
				return this._LoaiPhong.Entity;
			}
			set
			{
				LoaiPhong previousValue = this._LoaiPhong.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhong.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._LoaiPhong.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._IDLoaiPhong = value.IDLoaiPhong;
					}
					else
					{
						this._IDLoaiPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiPhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnhPhongs(AnhPhong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_AnhPhongs(AnhPhong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_ChiTietTienNghis(ChiTietTienNghi entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_ChiTietTienNghis(ChiTietTienNghi entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResetPass")]
	public partial class ResetPass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _maRS;
		
		private System.Nullable<int> _ID_NguoiDung;
		
		private string _ThoiHan;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnmaRSChanging(string value);
    partial void OnmaRSChanged();
    partial void OnID_NguoiDungChanging(System.Nullable<int> value);
    partial void OnID_NguoiDungChanged();
    partial void OnThoiHanChanging(string value);
    partial void OnThoiHanChanged();
    #endregion
		
		public ResetPass()
		{
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maRS", DbType="VarChar(32)")]
		public string maRS
		{
			get
			{
				return this._maRS;
			}
			set
			{
				if ((this._maRS != value))
				{
					this.OnmaRSChanging(value);
					this.SendPropertyChanging();
					this._maRS = value;
					this.SendPropertyChanged("maRS");
					this.OnmaRSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NguoiDung", DbType="Int")]
		public System.Nullable<int> ID_NguoiDung
		{
			get
			{
				return this._ID_NguoiDung;
			}
			set
			{
				if ((this._ID_NguoiDung != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NguoiDungChanging(value);
					this.SendPropertyChanging();
					this._ID_NguoiDung = value;
					this.SendPropertyChanged("ID_NguoiDung");
					this.OnID_NguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiHan", DbType="VarChar(20)")]
		public string ThoiHan
		{
			get
			{
				return this._ThoiHan;
			}
			set
			{
				if ((this._ThoiHan != value))
				{
					this.OnThoiHanChanging(value);
					this.SendPropertyChanging();
					this._ThoiHan = value;
					this.SendPropertyChanged("ThoiHan");
					this.OnThoiHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ResetPass", Storage="_TaiKhoan", ThisKey="ID_NguoiDung", OtherKey="IDTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.ResetPasses.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ResetPasses.Add(this);
						this._ID_NguoiDung = value.IDTaiKhoan;
					}
					else
					{
						this._ID_NguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTaiKhoan;
		
		private string _HoTen;
		
		private string _Email;
		
		private string _MatKhau;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _maTinhTrang;
		
		private System.Nullable<bool> _Quyen;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<ResetPass> _ResetPasses;
		
		private EntityRef<TinhTrang> _TinhTrang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTaiKhoanChanging(int value);
    partial void OnIDTaiKhoanChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnmaTinhTrangChanging(string value);
    partial void OnmaTinhTrangChanged();
    partial void OnQuyenChanging(System.Nullable<bool> value);
    partial void OnQuyenChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._ResetPasses = new EntitySet<ResetPass>(new Action<ResetPass>(this.attach_ResetPasses), new Action<ResetPass>(this.detach_ResetPasses));
			this._TinhTrang = default(EntityRef<TinhTrang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTaiKhoan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTaiKhoan
		{
			get
			{
				return this._IDTaiKhoan;
			}
			set
			{
				if ((this._IDTaiKhoan != value))
				{
					this.OnIDTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._IDTaiKhoan = value;
					this.SendPropertyChanged("IDTaiKhoan");
					this.OnIDTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(32)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(13)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(500)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(4)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTinhTrang", DbType="VarChar(10)")]
		public string maTinhTrang
		{
			get
			{
				return this._maTinhTrang;
			}
			set
			{
				if ((this._maTinhTrang != value))
				{
					if (this._TinhTrang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._maTinhTrang = value;
					this.SendPropertyChanged("maTinhTrang");
					this.OnmaTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="Bit")]
		public System.Nullable<bool> Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HoaDon", Storage="_HoaDons", ThisKey="IDTaiKhoan", OtherKey="IDTaiKhoan")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ResetPass", Storage="_ResetPasses", ThisKey="IDTaiKhoan", OtherKey="ID_NguoiDung")]
		public EntitySet<ResetPass> ResetPasses
		{
			get
			{
				return this._ResetPasses;
			}
			set
			{
				this._ResetPasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhTrang_TaiKhoan", Storage="_TinhTrang", ThisKey="maTinhTrang", OtherKey="maTinhTrang", IsForeignKey=true)]
		public TinhTrang TinhTrang
		{
			get
			{
				return this._TinhTrang.Entity;
			}
			set
			{
				TinhTrang previousValue = this._TinhTrang.Entity;
				if (((previousValue != value) 
							|| (this._TinhTrang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhTrang.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._TinhTrang.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._maTinhTrang = value.maTinhTrang;
					}
					else
					{
						this._maTinhTrang = default(string);
					}
					this.SendPropertyChanged("TinhTrang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_ResetPasses(ResetPass entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_ResetPasses(ResetPass entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TienNghi")]
	public partial class TienNghi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTN;
		
		private string _TenTN;
		
		private string _AnhDaiDien;
		
		private EntitySet<ChiTietTienNghi> _ChiTietTienNghis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTNChanging(int value);
    partial void OnIDTNChanged();
    partial void OnTenTNChanging(string value);
    partial void OnTenTNChanged();
    partial void OnAnhDaiDienChanging(string value);
    partial void OnAnhDaiDienChanged();
    #endregion
		
		public TienNghi()
		{
			this._ChiTietTienNghis = new EntitySet<ChiTietTienNghi>(new Action<ChiTietTienNghi>(this.attach_ChiTietTienNghis), new Action<ChiTietTienNghi>(this.detach_ChiTietTienNghis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTN
		{
			get
			{
				return this._IDTN;
			}
			set
			{
				if ((this._IDTN != value))
				{
					this.OnIDTNChanging(value);
					this.SendPropertyChanging();
					this._IDTN = value;
					this.SendPropertyChanged("IDTN");
					this.OnIDTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTN", DbType="NVarChar(50)")]
		public string TenTN
		{
			get
			{
				return this._TenTN;
			}
			set
			{
				if ((this._TenTN != value))
				{
					this.OnTenTNChanging(value);
					this.SendPropertyChanging();
					this._TenTN = value;
					this.SendPropertyChanged("TenTN");
					this.OnTenTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhDaiDien", DbType="NVarChar(50)")]
		public string AnhDaiDien
		{
			get
			{
				return this._AnhDaiDien;
			}
			set
			{
				if ((this._AnhDaiDien != value))
				{
					this.OnAnhDaiDienChanging(value);
					this.SendPropertyChanging();
					this._AnhDaiDien = value;
					this.SendPropertyChanged("AnhDaiDien");
					this.OnAnhDaiDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TienNghi_ChiTietTienNghi", Storage="_ChiTietTienNghis", ThisKey="IDTN", OtherKey="IDTN")]
		public EntitySet<ChiTietTienNghi> ChiTietTienNghis
		{
			get
			{
				return this._ChiTietTienNghis;
			}
			set
			{
				this._ChiTietTienNghis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietTienNghis(ChiTietTienNghi entity)
		{
			this.SendPropertyChanging();
			entity.TienNghi = this;
		}
		
		private void detach_ChiTietTienNghis(ChiTietTienNghi entity)
		{
			this.SendPropertyChanging();
			entity.TienNghi = null;
		}
	}
}
#pragma warning restore 1591
